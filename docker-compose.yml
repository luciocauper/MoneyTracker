version: "3.9"

services:
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  extrator:
    build: .
    volumes:
      - ./dados_brutos:/app/dados_brutos
    environment:
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    depends_on:
      - minio
    command: >
      sh -c "
        python extracao/api/api.py &&
        python extracao/csv/csv.py &&
        python extracao/database/database.py &&
        python uploader/uploader.py
      "

  # NOVO SERVIÇO: Data Warehouse (PostgreSQL)
  db_warehouse:
    image: postgres:13 # Imagem do PostgreSQL. Versão 13 é estável e comum.
    environment:
      POSTGRES_DB: ibm_dw        # Nome do seu banco de dados
      POSTGRES_USER: user        # Usuário do banco de dados
      POSTGRES_PASSWORD: password # Senha do banco de dados (use uma senha mais forte em produção!)
    ports:
      - "5432:5432" # Mapeia a porta 5432 do container para a porta 5432 da sua máquina
    volumes:
      - pg_data:/var/lib/postgresql/data # Volume para persistir os dados do DB

  # NOVO SERVIÇO: Loader de Dados para o Data Warehouse
  data_loader:
    build: . # Reutiliza sua imagem Docker existente (com python e pandas)
    volumes:
      - ./dados_processados:/app/dados_processados # Mapeia a pasta com os dados transformados
    environment:
      PGHOST: db_warehouse    # Host do PostgreSQL (nome do serviço no docker-compose)
      PGUSER: user
      PGPASSWORD: password
      PGDATABASE: ibm_dw
    depends_on:
      - db_warehouse # Garante que o banco de dados esteja funcionando antes de tentar carregar
      # Você pode adicionar 'extrator' aqui se quiser que o 'data_loader' só rode depois de tudo
      # ter sido extraído e processado por um pipeline completo (docker-compose up data_loader)
      # ou pode rodá-lo separadamente depois de 'extrator' e 'processamento'
    command: tail -f /dev/null # Mantém o container rodando para você poder executar comandos dentro dele depois
    # ^^^ Nota: O comando acima é temporário. Você executará o script de carregamento manualmente dentro do container
    # ou o adicionaremos aqui depois que o script estiver pronto e testado.

volumes:
  minio_data:
  pg_data: # Define o novo volume para o PostgreSQL